name: DyLib build

on: 
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - '.github/workflows/build-lib.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'


env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for windows
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: test-cargo-registry
      - name: List
        run: find ./
      - name: Run tests
        run: cargo test --verbose

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: aarch64-linux-android
            OS: ubuntu-latest
    needs: test
    runs-on: ${{ matrix.OS }}
    env:
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{matrix.TARGET}}
      - name: List
        run: find ./
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26
          add-to-path: true
      - name: Install and configure dependencies
        run: |
          ${{ steps.setup-ndk.outputs.ndk-path }}/build/tools/make_standalone_toolchain.py --api 30 --arch arm64 --install-dir ${{ steps.setup-ndk.outputs.ndk-path }}/osu_tc/arm64
          cat >>~/.cargo/config <<EOF
          [target.aarch64-linux-android]
          ar = "${{ steps.setup-ndk.outputs.ndk-path }}/osu_tc/arm64/bin/aarch64-linux-android-ar"
          linker = "${{ steps.setup-ndk.outputs.ndk-path }}/osu_tc/arm64/bin/aarch64-linux-android-gcc"
          rustflags = ["-L", "${{ steps.setup-ndk.outputs.ndk-path }}/osu_tc/arm64/sysroot/usr/lib/aarch64-linux-android/30",
          "-L", "./libfuse_libs/3.10/static_lib",
          "-l", "fuse3"]
          EOF
      - name: Install rust target
        run: rustup target add $TARGET
      - name: Run build
        run: cargo build --release --verbose --target $TARGET
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.TARGET }}-lib
          path: |
            ./target/${{ matrix.TARGET }}/release/*.so
